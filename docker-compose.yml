volumes:
  pgadmin_data:
    driver: local

services:
  postgres:
    image: postgres:15
    container_name: postgres_commune
    restart: always
    env_file:
      - .env
    volumes:
      - ./docker/postgres/data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - commune-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  frontend:
    build: ./frontend
    container_name: angular_commune
    ports:
      - "4200:80"
    depends_on:
      - postgres
    networks:
      - commune-network

  backend:
    build: ./core
    container_name: backend_commune
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    networks:
      - commune-network

  emailsender:
    build: ./microservices/emailsender
    container_name: emailsender
    networks:
      - commune-network
    environment:
      - ENV=prod  # o las variables de .env si las usas
    

  pdfgenerator:
    build: ./microservices/pdfgenerator
    container_name: pdfgenerator
    networks:
      - commune-network
    environment:
      - ENV=prod
networks:
  commune-network:

#  pgadmin:
#    image: dpage/pgadmin4
#    container_name: pgadmin_commune
#    restart: always
#    env_file:
#      - .env
#    volumes:
#      - pgadmin_data:/var/lib/pgadmin
#    ports:
#      - "${PGADMIN_PORT}:80"
#      - postgres
#    depends_on:
